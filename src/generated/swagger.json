{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"age": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"email",
					"age",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUsersResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"response": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array",
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"response",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"response": {
						"allOf": [
							{
								"$ref": "#/components/schemas/User"
							}
						],
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"response",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IHealthResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"response": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"response",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@mkabumattar/express-boilerplate",
		"version": "0.0.0",
		"description": "A boilerplate for Express.js with TypeScript, TSOA, and Pino Logger",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Mohammad Abu Mattar",
			"email": "mohammad.khaled@outlook.com",
			"url": "https://mkabumattar.github.io/"
		}
	},
	"paths": {
		"/user": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Users found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUsersResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves the list of all users. <br/>\nSupply no parameters and receive all users.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		},
		"/user/{user_id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "User found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing user. <br/>\nSupply the unique user ID from either and receive corresponding user details.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"description": "The user's identifier",
						"in": "path",
						"name": "user_id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/health": {
			"get": {
				"operationId": "GetHealth",
				"responses": {
					"200": {
						"description": "Service is healthy",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IHealthResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves the health status of the service. <br/>\nSupply no parameters and receive the health status of the service.",
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}