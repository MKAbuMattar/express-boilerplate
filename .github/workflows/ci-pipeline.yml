name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  checks: write
  contents: read
  security-events: write
  pull-requests: read
  statuses: write
  issues: write

env:
  STACK_NAME: express-bdoilerplate
  DOMAIN: localhost
  NODE_ENV: development
  PORT: 8080
  HOST: localhost
  CORS_WHITELIST: "*"
  API_KEY: "secret"

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language:
          - TypeScript

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          source-root: src

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Upload Artifact for CodeQL Analysis
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: ${{ runner.workspace }}/.github/artifacts/codeql

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Run Biome
        run: biome ci .

      - name: Upload Artifact for Code Quality
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-results
          path: ${{ runner.workspace }}/.github/artifacts/code-quality

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm test

      - name: Upload Artifact for Test
        uses: actions/upload-artifact@v4
        with:
          name: test
          path: ${{ runner.workspace }}/.github/artifacts/test

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Upload Artifact for Build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ${{ runner.workspace }}/.github/artifacts/build

  docker-image:
    name: Docker Image CI
    runs-on: ubuntu-latest
    needs: build
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Set repository name to lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag ghcr.io/${{ env.REPO_NAME }}:${{ github.sha }}
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker tag ghcr.io/${{ env.REPO_NAME }}:${{ github.sha }} ghcr.io/${{ env.REPO_NAME }}:latest
          fi

      - name: Push the Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ghcr.io/${{ env.REPO_NAME }}:${{ github.sha }}
          docker push ghcr.io/${{ env.REPO_NAME }}:latest

      - name: Upload Artifact for Docker Image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ${{ runner.workspace }}/.github/artifacts/docker-image
